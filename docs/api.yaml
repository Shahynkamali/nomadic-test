openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Programs'
  license:
    name: MIT
servers:
  - url: 'https://sample-api.staging.nomadic.fm/api'
paths:
  /programs:
    get:
      summary: 'List all available Programs'
      operationId: listPrograms
      responses:
        '200':
          description: 'List of Programs'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramList'
  /programs/{id}:
    get:
      summary: 'Return details about a single Program'
      operationId: listProgram
      parameters:
        - name: id
          in: path
          description: ID of the Program
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Sample response: Details about a Program by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
        '404':
            description: 'Program not found'
    patch:
      summary: 'Enrol/unenrol in a Program'
      operationId: listProgram
      parameters:
        - name: id
          in: path
          description: ID of the Program
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Update to Program enrolment status
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enrolled:
                  type: boolean
      responses:
        '204':
          description: 'Success'
        '404':
            description: 'Program not found'
  /programs/{id}/team:
    get:
      summary: 'Return team details for a Program'
      operationId: listTeam
      parameters:
        - name: id
          in: path
          description: ID of the Program
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Sample response: Team details for a Program by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetail'
        '404':
            description: 'Program not found, or not enrolled in a team'
components:
  schemas:
    Program:
      type: object
      required:
        - id
        - title
        - image
        - enrolled
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        image:
          type: string
        enrolled:
          type: boolean
    ProgramList:
        type: array
        items:
          $ref: '#/components/schemas/Program'
    TeamDetail:
      type: object
      required:
        - name
        - initials
        - color
        - team_progress
        - your_progress
      properties:
        name:
          type: string
        initials:
          type: string
        color:
          type: string
        your_progress:
          type: integer
          format: int32
        team_progress:
          type: integer
          format: int32